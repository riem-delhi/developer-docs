(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{223:function(e,t,a){"use strict";a.r(t);var i=a(0),n=Object(i.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"prices-in-development"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prices-in-development","aria-hidden":"true"}},[e._v("#")]),e._v(" Prices (In development)")]),e._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("The Prices Antara module implements a decentralized, incentivized margin trading system on a Smart Chain; allows users to open long and short leveraged positions against the House (the module itself). It required the existence of a completely trustless and decentralized price feed module (DTO - A decentralized trustless oracle). So the DTO was implemented by piggybacking on "),a("a",{attrs:{href:"https://medium.com/@jameslee777/decentralized-trustless-oracles-dto-by-piggybacking-on-timestamp-consensus-rules-2adce34d67b6",target:"_blank",rel:"noopener noreferrer"}},[e._v("timestamp consensus rules"),a("OutboundLink")],1),e._v(". It works by requiring the miners of the Smart Chain to include the required off-chain data as a part of OP_RETURN of the coinbase transaction (The transaction that pays the block reward to the miner). The validation of the off-chain data is part of the consensus rules and if the data is false, the block will be rejected by the network, which incentivizes the miner to be truthful. To achieve consensus, all nodes allow an error of about 1% in the reported data. The DTO provides the required Price feed. For markets like AMZN/KMD that don’t exist in real life, synthetic prices can be used. Example: "),a("code",[e._v("(AMZN/USD)*(USD/BTC)*(BTC/KMD)")]),e._v(" gives the "),a("code",[e._v("AMZN/KMD")]),e._v(" price.")]),e._v(" "),a("p",[e._v("A simple language with a forth like syntax was implemented to calculate synthetic prices. It supports derivation of a synthetic price from upto 3 available prices through the operations of multiplication and division. It also supports weights to calculate arbitrary baskets/indexes. Example: A synthetic price for a basket with "),a("code",[e._v("¼ BCH/USD")]),e._v(" and "),a("code",[e._v("¾ BTC/USD")]),e._v(" in it can be calculated and margin traded against.")]),e._v(" "),a("p",[e._v("A player opens a position with the desired amount and leverage. They can close the position anytime and receive the current equity that is in a non negative state. When the loss of a player is close to exceeding their position, it is liquidated by incentivized users(miners) who will receive a small percentage.")]),e._v(" "),a("p",[e._v("To counter the possibility of manipulation of Price data by a miner by taking advantage of the 1% allowed error to win an open bet, when a position is opened, the price is fixed 24 hours later based on the average of the prices in the past 24 hours. For longs, the lock price (cost basis) is the maximum among averages; For shorts it is the minimum among averages. So margin trading in such a system needs some patience.")])])},[],!1,null,null,null);t.default=n.exports}}]);